From 7c8b9d054523b16a1a7cd67d165d1e6b0c4ad2e7 Mon Sep 17 00:00:00 2001
From: Primiano Tucci <p.tucci@gmail.com>
Date: Mon, 6 Jul 2015 23:03:55 +0000
Subject: [PATCH 4/4] Enable SPI DMA on Intel Edison

Tested in a lab with an oscilloscope.
Reach 25 MHz of continuous streaming.
Also this enables DMA on the ads7955 peripheral for testing.

See https://gist.github.com/primiano/f807583afb05e39d2d3a for
an simplified example of how to use SPI in kernel space.
---
 arch/x86/platform/intel-mid/device_libs/platform_ads7955.c | 4 ++--
 arch/x86/platform/intel-mid/device_libs/platform_spidev.c  | 1 -
 drivers/spi/intel_mid_ssp_spi.c                            | 7 ++++++-
 include/linux/spi/intel_mid_ssp_spi.h                      | 3 +++
 4 files changed, 11 insertions(+), 4 deletions(-)

diff --git a/arch/x86/platform/intel-mid/device_libs/platform_ads7955.c b/arch/x86/platform/intel-mid/device_libs/platform_ads7955.c
index c0d07aa..978d36f 100644
--- a/arch/x86/platform/intel-mid/device_libs/platform_ads7955.c
+++ b/arch/x86/platform/intel-mid/device_libs/platform_ads7955.c
@@ -20,8 +20,7 @@
 static struct intel_mid_ssp_spi_chip chip = {
 	.burst_size = DFLT_FIFO_BURST_SIZE,
 	.timeout = DFLT_TIMEOUT_VAL,
-	/* SPI DMA is current not usable on Tangier */
-	.dma_enabled = false,
+	.dma_enabled = true,
 };
 
 void __init *ads7955_platform_data(void *info)
@@ -30,6 +29,7 @@ void __init *ads7955_platform_data(void *info)
 
 	spi_info->mode = SPI_MODE_0;
 
+	spi_info->max_speed_hz = 25000000,
 	spi_info->controller_data = &chip;
 	spi_info->bus_num = FORCE_SPI_BUS_NUM;
 
diff --git a/arch/x86/platform/intel-mid/device_libs/platform_spidev.c b/arch/x86/platform/intel-mid/device_libs/platform_spidev.c
index b1d2a2c..fb02466 100644
--- a/arch/x86/platform/intel-mid/device_libs/platform_spidev.c
+++ b/arch/x86/platform/intel-mid/device_libs/platform_spidev.c
@@ -25,7 +25,6 @@ static int tng_ssp_spi2_FS_gpio = 111;
 static struct intel_mid_ssp_spi_chip chip = {
 	.burst_size = DFLT_FIFO_BURST_SIZE,
 	.timeout = DFLT_TIMEOUT_VAL,
-	/* SPI DMA is currently not usable on Tangier */
 	.dma_enabled = true,
 	.cs_control = tng_ssp_spi_cs_control,
 	.platform_pinmux = tng_ssp_spi_platform_pinmux,
diff --git a/drivers/spi/intel_mid_ssp_spi.c b/drivers/spi/intel_mid_ssp_spi.c
index 5964b3b..09e724f 100644
--- a/drivers/spi/intel_mid_ssp_spi.c
+++ b/drivers/spi/intel_mid_ssp_spi.c
@@ -917,7 +917,7 @@ static void start_bitbanging(struct ssp_drv_context *sspc)
 static unsigned int ssp_get_clk_div(struct ssp_drv_context *sspc, int speed)
 {
 	if (sspc->quirks & QUIRKS_PLATFORM_MRFL)
-		return max(25000000 / speed, 4) - 1;
+		return max(25000000 / speed, 1) - 1;
 	else
 		return max(100000000 / speed, 4) - 1;
 }
@@ -1049,6 +1049,11 @@ static int handle_message(struct ssp_drv_context *sspc)
 	} else {
 		/* (re)start the SSP */
 		if (intel_mid_identify_sim() != INTEL_MID_CPU_SIMULATION_SLE) {
+			if (transfer->speed_hz > 6250000)
+				write_SSCR2((read_SSCR2(reg) | SSCR2_CLK_DEL_EN), reg);
+			else
+				write_SSCR2((read_SSCR2(reg) & ~SSCR2_CLK_DEL_EN), reg);
+
 			if (ssp_timing_wr) {
 				dev_dbg(dev, "original cr0 before reset:%x",
 					chip->cr0);
diff --git a/include/linux/spi/intel_mid_ssp_spi.h b/include/linux/spi/intel_mid_ssp_spi.h
index cfa9f15..e92828e 100644
--- a/include/linux/spi/intel_mid_ssp_spi.h
+++ b/include/linux/spi/intel_mid_ssp_spi.h
@@ -111,6 +111,7 @@ DEFINE_SSP_REG(SSTO, 0x28)
 DEFINE_SSP_REG(SSPSP, 0x2c)
 DEFINE_SSP_REG(SSFS, 0x44)
 DEFINE_SSP_REG(SFIFOL, 0x68)
+DEFINE_SSP_REG(SSCR2, 0x40)
 
 DEFINE_SSP_REG(I2CCTRL, 0x00);
 DEFINE_SSP_REG(I2CDATA, 0x04);
@@ -208,6 +209,8 @@ DEFINE_SSP_REG(GAFR1_U, 0x44);
 #define SSPSP_SFRMP      (1 << 2)    /* Serial Frame Polarity */
 #define SSPSP_SCMODE(x)  ((x) << 0)  /* Serial Bit Rate Clock Mode */
 
+#define SSCR2_CLK_DEL_EN (1 << 3) /* Delay logic for capturing input data */
+
 /*
  * For testing SSCR1 changes that require SSP restart, basically
  * everything except the service and interrupt enables
-- 
1.8.3.1

